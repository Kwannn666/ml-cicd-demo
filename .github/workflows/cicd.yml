name: CI-CD-ML
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Train & Log to MLflow
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_EXPERIMENT: demo
          DATA_CSV: data/train.csv
          TARGET: target
        run: python train.py

      - name: Upload training artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: artifacts/

      - name: Download artifacts to workspace
        uses: actions/download-artifact@v4
        with:
          name: model-artifacts
          path: artifacts/

      - name: Login to GHCR
        if: ${{ secrets.GHCR_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & Push Image
        if: ${{ secrets.GHCR_TOKEN != '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

      - name: Deploy via SSH to VPS
        if: ${{ secrets.VPS_HOST != '' && secrets.VPS_USER != '' && secrets.VPS_SSH_KEY != '' && secrets.GHCR_TOKEN != '' }}
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GHCR_TOKEN }}
            docker pull ghcr.io/${{ github.repository }}:latest
            docker compose -f ~/ml-cicd/docker-compose.prod.yml up -d
